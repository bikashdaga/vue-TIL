(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{644:function(t,e,v){"use strict";v.r(e);var _=v(21),a=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"rest-api"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rest-api"}},[t._v("#")]),t._v(" REST API")]),t._v(" "),v("p",[t._v("API란 컴퓨터의 기능을 실행시키는 방법을 말한다. REST API는 나의 컴퓨터가 아닌 "),v("strong",[t._v("다른 이의 컴퓨터를 실행")]),t._v("시키는 방법이다. HTTP 통신을 활용하여 기계끼리 통신함에 있어서 HTTP의 잠재력을 끌어올린 결과물이라고 보면 될 것이다.")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("id")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("title")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("body")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("rest")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("...")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("ajax")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("...")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("json")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("...")])])])]),t._v(" "),v("p",[t._v("데이터에 대한 명칭을 "),v("code",[t._v("topic")]),t._v("이라고 정의하였다면 topic에 해당하는 데이터를 "),v("strong",[t._v("리소스(Resource)")]),t._v(" 라고 한다. 리소스는 URI를 통해 표현되며 "),v("code",[t._v("http://example.com/topics")]),t._v("라는 URI를 가진다고 하면 topic 데이터들에 대하여 "),v("strong",[t._v("컬렉션(Collection)")]),t._v(" 이라고 한다. 컬렉션의 각 데이터를 "),v("strong",[t._v("엘리먼트(Element)")]),t._v(" 라고 한다.")]),t._v(" "),v("p",[t._v("엘리먼트는 id값으로 구분하는 것이 일반적이며 명사로 URI를 표현할 경우 단수형으로 작성한다. "),v("code",[t._v("http://example.com/topics/1")]),t._v(", "),v("code",[t._v("http://example.com/topics/rest")])]),t._v(" "),v("details",{staticClass:"custom-block details"},[v("summary",[t._v("What is URI?")]),t._v(" "),v("p",[t._v("URI는 "),v("code",[t._v("Uniform Resource Identifier")]),t._v("의 약자로 인터넷에 있는 리소스의 유일한 주소를 나타낸다.\nURL과 URI는 리소스 주소에 대해 나타낸다는 점에서 동일하지만 URL은 http나 https등을 통해 해당 리소스 주소로 "),v("strong",[t._v("어떻게 접근하는 지에 대해서까지 표현한다.")])])]),t._v(" "),v("p",[t._v("URI는 리소스를 구분해주는 식별자일 뿐이므로 리소스를 가공해주는 작업을 해줄 수가 없다. 리소스를 가공하는 작업으로는 "),v("strong",[t._v("CRUD")]),t._v("(Create, Read, Update, Delete) 작업이 있는데 이를 REST API에서 "),v("strong",[t._v("메서드(method)")]),t._v(" 를 통해 처리할 수 있다.")]),t._v(" "),v("p",[t._v("각 작업에 따라 REST API가 사용하는 메서드는 다음과 같다.")]),t._v(" "),v("ol",[v("li",[t._v("Create - POST")]),t._v(" "),v("li",[t._v("READ - GET")]),t._v(" "),v("li",[t._v("Update - PUT | PATCH (PUT은 전체 내용의 교체, PATCH는 부분교체)")]),t._v(" "),v("li",[t._v("Delete - DELETE")])]),t._v(" "),v("h2",{attrs:{id:"rest-api-crud-실습-추가-예정"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rest-api-crud-실습-추가-예정"}},[t._v("#")]),t._v(" REST API - CRUD 실습 추가 예정")])])}),[],!1,null,null,null);e.default=a.exports}}]);