(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{474:function(s,t,a){s.exports=a.p+"assets/img/axis.2135c792.png"},659:function(s,t,a){"use strict";a.r(t);var e=a(21),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"css-grid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css-grid"}},[s._v("#")]),s._v(" CSS Grid")]),s._v(" "),e("p",[s._v("CSS를 다루면서 "),e("code",[s._v("display:flex")]),s._v(" 속성은 익숙하게 사용하였지만 그리드가 꼭 편할때가 있어서 결국 정리하게 되었습니다.")]),s._v(" "),e("p",[s._v("최근 프레이머 모션에 대해 공부하는 와중에 프레이머 홈페이지의 데모 애니메이션 중 Variants의 예시를 보여주는 부분이 있었습니다.")]),s._v(" "),e("p",[s._v("해당 애니메이션 구현에 앞서 박스 안에 원이 네개 배열되어 있었는데, 이를 "),e("code",[s._v("display:flex")]),s._v("로 배열하려고 하니 내부에 박스 두개를 더 겹치고 박스에 패딩을 부여한 뒤 "),e("code",[s._v("justify-content:space-between")]),s._v(", "),e("code",[s._v("align-items:center")]),s._v("를 주는 둥 엄청나게 코드가 복잡해질 수 밖에 없었습니다.")]),s._v(" "),e("p",[s._v("반면 그리드 시스템을 활용하게 될 경우 박스 내부를 원하는 크기로 잘라 각각 박스에 요소들을 알아서 배열해준다는 장점이 있었습니다. 코드의 중복이 다이나믹하게 줄어들 수 있었습니다.")]),s._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" Box "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("styled")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("motion"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("div"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\n    width: 200px;\n    height: 200px;\n    background-color: #d14cf9;\n    border-radius: 40px;\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1), 0 10px 20px rgba(0, 0, 0, 0.06);\n    display: grid;\n\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: repeat(2, 1fr);\n    align-items: center;\n    justify-items: center;\n")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[s._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[s._v("위 코드는 리액트 "),e("code",[s._v("styled-components")]),s._v("의 일부를 가져온 것입니다. 아래 네 개의 속성을 통해 그리드 기반 요소 배열을 진행할 수 있었습니다.")]),s._v(" "),e("ol",[e("li",[s._v("grid-template-columns : 박스에 세로 기준 그리드를 생성합니다.\n"),e("ul",[e("li",[s._v("각각 원하는 값을 그리드 크기로 지정할 수 있지만, "),e("code",[s._v("repeat(반복할 그리드 수, 단위)")]),s._v("로 지정하면 자동으로 동일 크기로 그리드를 잡아줍니다.")])])]),s._v(" "),e("li",[s._v("grid-template-rows : 가로 기준으로 그리드를 잡아줍니다.")]),s._v(" "),e("li",[s._v("align-items : 그리드 내부 요소들을 cross-axis 기준으로 정렬합니다. "),e("code",[s._v("display:flex")]),s._v("일 때와 동일하게 동작합니다.")]),s._v(" "),e("li",[s._v("justify-items (justify-content와 혼동 X) : 그리드 내부 요소들을 main-axis 기준으로 정렬합니다.")])]),s._v(" "),e("p",[s._v("여러분도 아래의 결과물을 직접 정렬해보세요!")]),s._v(" "),e("p",[e("img",{attrs:{src:a(474),alt:"framer"}})]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("place-self")]),s._v(" "),e("p",[s._v("그리드 시스템을 적용한 부모 요소에 align-items와 justify-items를 해도 되지만, 자식 요소에 "),e("code",[s._v("place-self:center")]),s._v("를 줘도 동일한 결과를 보이게 됩니다.")])])])}),[],!1,null,null,null);t.default=n.exports}}]);